h1. Integration Guide

h2. <a name="migrate">Migrate your current project from Groovy template engine to Rythm</a>

PlayRythm is designed to support smooth migrating from Groovy template engine.

By default "system" (i.e. groovy) template engine is used. Meaning without special annotation, controller's render request will be handled by groovy template engine. And this give developer a good base to move to Rythm template step by step.

# Step 1, rewrite a groovy template using rythm syntax.
# Step 2, annotate the relevant controller action method with <code>@UseRythmTemplateEngine</code> annotation

Continue the above steps until all your controller migrated to rythm, you can annotate the controller with <code>@UseRythmTemplateEngine</code> and drop all that from action method

p(note). -Tip: enclose all your rythm template with @#{verbatim}@ and @#{/verbatim}@ can help you avoid groovy compile exception and does not impact your rythm template-. This is not true. The groovy template engine will still parse the expressions. See "Resolve groovy compilation error":#conflict for workarounds.

h2. <a name="new">Create an new project and use Rythm engine from the beginning</a>

If you decide to use Rythm engine in a new project, you can add one line to your application.conf

bc. rythm.default.engine=rythm

And you can start using rythm template without <code>@UseRythmTemplateEngine</code> annotation. On the contrary if you decide one or a few controller methods should use groovy template engine for some reason, you can annotate that action with <code>@UseSystemTemplateEngine</code> annotation

h2. <a name="conflict">Resolve groovy compilation error</a>

Because groovy template engine does not provide a way to skip parsing any part of the template file, the rythm template file might cause compilation error during precompile process, where rythm has no way to identify some files been a rythm template or groovy template, e.g. some json generation template. Start from version 0.9.5 it's suggest to move all rythm templates or at least those compilation error causing templates to @app/rythm@ folder from @app/views@ folder.

h2. <a name="tag">More about tags</a>

So far you can keep rythm tags file under @app/views/tags/ryth@ folder. However it is recommened not to use tags folder at all since every rythm template is a tag and can be called from any other rythm templates. E.g. suppose you have a template file @app/views/Order/list.html@, while you can use it as an ordinary template file, you also free to call it as a tag from other rythm template like: <code>@Order.list(myOrders)</code>


h2. <a name="resource">See Also</a>

# %(next)"Rythm Template User guide":user_guide%
# "Reference manual":reference
 